<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 14.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="14.0">
 <Namespaces>
  <Namespace Name="Rubedos.Viper.Net">
   <Messages>
    <Message Id="Rubedos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rubedos' in namespace name 'Rubedos.Viper.Net'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Rubedos.Viper.Net.DynamicReconfigure">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'Rubedos.Viper.Net.DynamicReconfigure' with another namespace.</Issue>
    </Message>
    <Message Id="Rubedos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rubedos' in namespace name 'Rubedos.Viper.Net.DynamicReconfigure'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Rubedos.Viper.Net.PerceptionApps">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'Rubedos.Viper.Net.PerceptionApps' with another namespace.</Issue>
    </Message>
    <Message Id="Rubedos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rubedos' in namespace name 'Rubedos.Viper.Net.PerceptionApps'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="Rubedos.Viper.Net.Tf">
   <Messages>
    <Message TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
     <Issue Certainty="50" Level="Warning">Consider merging the types defined in 'Rubedos.Viper.Net.Tf' with another namespace.</Issue>
    </Message>
    <Message Id="Tf" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'Tf' in namespace name 'Rubedos.Viper.Net.Tf' by changing it to 'TF'.</Issue>
    </Message>
    <Message Id="Rubedos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rubedos' in namespace name 'Rubedos.Viper.Net.Tf'.</Issue>
    </Message>
    <Message Id="Tf" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tf' in namespace name 'Rubedos.Viper.Net.Tf'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\bin\Release\Rubedos.Viper.Net.dll">
   <Modules>
    <Module Name="rubedos.viper.net.dll">
     <Messages>
      <Message Id="Rubedos" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rubedos' in assembly name 'Rubedos.Viper.Net.dll'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'Rubedos.Viper.Net.dll' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="Rubedos.Viper.Net">
       <Types>
        <Type Name="CvmDevice" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Cvm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Cvm' in type name 'CvmDevice'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="256">Replace method 'CvmDevice.CvmDevice(string, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Ip" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="256">In member 'CvmDevice.CvmDevice(string, string)', correct the casing of 'Ip' in parameter name 'thisIp' by changing it to 'IP'.</Issue>
            </Message>
            <Message Id="Ip" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="256">In method 'CvmDevice.CvmDevice(string, string)', correct the spelling of 'Ip' in parameter name 'thisIp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#.ctor(System.Uri,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ip" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="48">In member 'CvmDevice.CvmDevice(Uri, string)', correct the casing of 'Ip' in parameter name 'thisIp' by changing it to 'IP'.</Issue>
            </Message>
            <Message Id="Ip" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="48">In method 'CvmDevice.CvmDevice(Uri, string)', correct the spelling of 'Ip' in parameter name 'thisIp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CallCvmApi(Ros.Net.Messages.cvm_web_panel.WebConfigAPI+Request)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="log4net.ILog.DebugFormat(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="615">Because the behavior of 'ILog.DebugFormat(string, params object[])' could vary based on the current user's locale settings, replace this call in 'CvmDevice.CallCvmApi(WebConfigAPI.Request)' with a call to 'ILog.DebugFormat(IFormatProvider, string, params object[])'. If the result of 'ILog.DebugFormat(IFormatProvider, string, params object[])' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CameraTopic" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseLiteralsWhereAppropriate" Category="Microsoft.Performance" CheckId="CA1802" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">Field 'CvmDevice.CameraTopic' is declared as 'static readonly' but is initialized with a constant value '${TopicPrefix}/cvm_v4l2_camera'. Mark this field as 'const' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ClientIp" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ip" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="89">Correct the casing of 'Ip' in member name 'CvmDevice.ClientIp' by changing it to 'IP'.</Issue>
            </Message>
            <Message Id="Ip" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="89">Correct the spelling of 'Ip' in member name 'CvmDevice.ClientIp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Connect()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ClientIp" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="524">Correct the spelling of the unrecognized token 'ClientIp' in the literal '"ClientIp is null!"'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Connect(System.Uri,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="509">Replace method 'CvmDevice.Connect(Uri, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Ip" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="509">In member 'CvmDevice.Connect(Uri, string)', correct the casing of 'Ip' in parameter name 'thisIp' by changing it to 'IP'.</Issue>
            </Message>
            <Message Id="Ip" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="509">In method 'CvmDevice.Connect(Uri, string)', correct the spelling of 'Ip' in parameter name 'thisIp' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="cvm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="509">In method 'CvmDevice.Connect(Uri, string)', correct the spelling of 'cvm' in parameter name 'cvmUri' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CvmConfigManager" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Cvm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="188">Correct the spelling of 'Cvm' in member name 'CvmDevice.CvmConfigManager' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CvmUri" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Cvm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="83">Correct the spelling of 'Cvm' in member name 'CvmDevice.CvmUri' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Disconnect()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="578">Modify 'CvmDevice.Disconnect()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DisconnectAsync()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="658">Modify 'CvmDevice.DisconnectAsync()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="mainHandle" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="841">'CvmDevice' contains field 'CvmDevice.mainHandle' that is of IDisposable type: 'NodeHandle'. Change the Dispose method on 'CvmDevice' to call Dispose or Close on this field.</Issue>
            </Message>
            <Message Id="timer" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="841">'CvmDevice' contains field 'CvmDevice.timer' that is of IDisposable type: 'Timer'. Change the Dispose method on 'CvmDevice' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FetchDeviceInfo()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="709">Modify 'CvmDevice.FetchDeviceInfo()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
             <Issue Certainty="95" Level="CriticalError" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="724">Modify 'CvmDevice.FetchDeviceInfo()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="689">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'CvmDevice.FetchDeviceInfo()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="688">Because the behavior of 'string.StartsWith(string)' could vary based on the current user's locale settings, replace this call in 'CvmDevice.FetchDeviceInfo()' with a call to 'string.StartsWith(string, StringComparison)'. If the result of 'string.StartsWith(string, StringComparison)' will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FetchTopic`1(System.String,System.TimeSpan)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="408">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'CvmDevice.FetchTopic&lt;T&gt;(string, TimeSpan)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FilterTopics(System.Collections.Generic.IEnumerable`1&lt;Ros.Net.TopicInfo&gt;,Rubedos.Viper.Net.FilterTopicsOptionsEnum,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="475">Replace method 'CvmDevice.FilterTopics(IEnumerable&lt;TopicInfo&gt;, FilterTopicsOptionsEnum, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="msg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="475">In method 'CvmDevice.FilterTopics(IEnumerable&lt;TopicInfo&gt;, FilterTopicsOptionsEnum, string)', correct the spelling of 'msg' in parameter name 'msgType' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="msgType" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="475">Parameter 'msgType' of 'CvmDevice.FilterTopics(IEnumerable&lt;TopicInfo&gt;, FilterTopicsOptionsEnum, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLicenseInfo()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="119">The 'this' parameter (or 'Me' in Visual Basic) of 'CvmDevice.GetLicenseInfo()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="119">Change 'CvmDevice.GetLicenseInfo()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetListOfImageTopics()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="433">Change 'CvmDevice.GetListOfImageTopics()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPerceptionApps()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="463">Change 'CvmDevice.GetPerceptionApps()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PostRosLog(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ros" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="356">Correct the spelling of 'Ros' in member name 'CvmDevice.PostRosLog(string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="msg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="356">In method 'CvmDevice.PostRosLog(string)', correct the spelling of 'msg' in parameter name 'msg' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RosNode" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ros" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="94">Correct the spelling of 'Ros' in member name 'CvmDevice.RosNode' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#rosoutSubscriber" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'CvmDevice.rosoutSubscriber' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#rosoutTopic" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="UseLiteralsWhereAppropriate" Category="Microsoft.Performance" CheckId="CA1802" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning">Field 'CvmDevice.rosoutTopic' is declared as 'static readonly' but is initialized with a constant value '/rosout'. Mark this field as 'const' instead.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendPing()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="783">Because the behavior of 'string.Format(string, object, object, object)' could vary based on the current user's locale settings, replace this call in 'CvmDevice.SendPing()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SoftwareUpdateManager" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_SoftwareUpdateManager(Rubedos.Viper.Net.Iface.ISoftwareUpdateManager)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="108">'CvmDevice.SoftwareUpdateManager.set(ISoftwareUpdateManager)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net" File="CvmDevice.cs" Line="828">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'CvmDevice.ToString()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DeviceInfoChaged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Chaged" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Chaged' in member name 'CvmDevice.DeviceInfoChaged' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RosoutMessaged" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Rosout" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Rosout' in member name 'CvmDevice.RosoutMessaged' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CvmDeviceException" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Cvm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Cvm' in type name 'CvmDeviceException'.</Issue>
          </Message>
          <Message TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
           <Issue Certainty="95" Level="Error">Add [Serializable] to 'CvmDeviceException' as this type implements ISerializable.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DeviceConfigManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Compare(System.Object,System.Object)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="161">The 'this' parameter (or 'Me' in Visual Basic) of 'DeviceConfigManager.Compare(object, object)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateDynamicReconfigureInterface(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="267">In method 'DeviceConfigManager.CreateDynamicReconfigureInterface(string)', call System.IDisposable.Dispose on object 'new DynamicReconfigureInterface(this.nHandle, nodeName, 0)' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CreateNodeHandle()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="280">In method 'DeviceConfigManager.CreateNodeHandle()', call System.IDisposable.Dispose on object 'new NodeHandle()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="NotCalled" Certainty="75" Level="CriticalWarning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="607">Change 'DeviceConfigManager.Dispose()' to call 'GC.SuppressFinalize(object)'. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FormatXml(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="403">In method 'DeviceConfigManager.FormatXml(string)', call System.IDisposable.Dispose on object 'XmlWriter.Create(stringBuilder, xmlWriterSettings)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="398">The 'this' parameter (or 'Me' in Visual Basic) of 'DeviceConfigManager.FormatXml(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FromXmlFile(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="455">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'DeviceConfigManager.FromXmlFile(string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetEnums(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="358">The 'this' parameter (or 'Me' in Visual Basic) of 'DeviceConfigManager.GetEnums(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="editMethod" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="358">Parameter 'editMethod' of 'DeviceConfigManager.GetEnums(string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetParameter(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="100">Replace method 'DeviceConfigManager.GetParameter(string, string, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="groupName" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="100">Parameter 'groupName' of 'DeviceConfigManager.GetParameter(string, string, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="102">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DeviceConfigManager.GetParameter(string, string, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetParameterValue(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="123">Replace method 'DeviceConfigManager.GetParameterValue(string, string, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadFromXmlString(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="439">Object 'stringReader' can be disposed more than once in method 'DeviceConfigManager.ReadFromXmlString(string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 439</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetParameterValue(System.String,System.String,System.Object,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="177">Replace method 'DeviceConfigManager.SetParameterValue(string, string, object, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="groupName" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="177">Parameter 'groupName' of 'DeviceConfigManager.SetParameterValue(string, string, object, string)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="186">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DeviceConfigManager.SetParameterValue(string, string, object, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="199">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DeviceConfigManager.SetParameterValue(string, string, object, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetParameterValueSync(System.String,System.String,System.Object,System.TimeSpan,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="137">Replace method 'DeviceConfigManager.SetParameterValueSync(string, string, object, TimeSpan, string)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="ms" TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="153">Correct the spelling of the unrecognized token 'ms' in the literal '" ms"'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="146">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'DeviceConfigManager.SetParameterValueSync(string, string, object, TimeSpan, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="153">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'DeviceConfigManager.SetParameterValueSync(string, string, object, TimeSpan, string)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SubscribeParameter`1(System.String,System.String,System.Action`1&lt;!!0&gt;)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="cb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="80">In method 'DeviceConfigManager.SubscribeParameter&lt;T&gt;(string, string, Action&lt;T&gt;)', correct the spelling of 'cb' in parameter name 'cb' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="cb" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="80">Parameter 'cb' of 'DeviceConfigManager.SubscribeParameter&lt;T&gt;(string, string, Action&lt;T&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="parameter" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="80">Parameter 'parameter' of 'DeviceConfigManager.SubscribeParameter&lt;T&gt;(string, string, Action&lt;T&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="82">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'DeviceConfigManager.SubscribeParameter&lt;T&gt;(string, string, Action&lt;T&gt;)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Provide correct arguments to formatting methods" Category="Microsoft.Usage" CheckId="CA2241" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
             <Issue Name="MissingFormatItem" Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="562">Method 'DeviceConfigManager.ToString()' calls 'string.Format(string, params object[])' and does not provide a format item for argument "4, 5". The provided format string is: '"{0}\n   -&gt; {1}: \'{2}\' (str, {5})"'</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="531">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'DeviceConfigManager.ToString()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="539">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'DeviceConfigManager.ToString()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="545">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'DeviceConfigManager.ToString()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="555">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'DeviceConfigManager.ToString()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="562">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'DeviceConfigManager.ToString()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToXmlString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="382">Object 'stringWriter' can be disposed more than once in method 'DeviceConfigManager.ToXmlString()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 382</Issue>
            </Message>
            <Message Id="System.IO.StringWriter.#ctor(System.Text.StringBuilder)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="DeviceConfigManager.cs" Line="374">Because the behavior of 'StringWriter.StringWriter(StringBuilder)' could vary based on the current user's locale settings, replace this call in 'DeviceConfigManager.ToXmlString()' with a call to 'StringWriter.StringWriter(StringBuilder, IFormatProvider)'. If the result of 'StringWriter.StringWriter(StringBuilder, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="FilterTopicsOptionsEnum" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'FilterTopicsOptionsEnum' so that it does not end in 'Enum'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ImageResolution" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#NHD" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="NHD" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'NHD' in member name 'ImageResolution.NHD' by changing it to 'Nhd'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#QVGA" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="QVGA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'QVGA' in member name 'ImageResolution.QVGA' by changing it to 'Qvga'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RosNodeConfiguration" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Ros" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ros' in type name 'RosNodeConfiguration'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#AddParameter(Rubedos.Viper.Net.Iface.IDynamicConfigParameter)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="RosNodeConfiguration.cs" Line="49">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'RosNodeConfiguration.AddParameter(IDynamicConfigParameter)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OnDynamicConfigurationUpdate(Ros.Net.Messages.dynamic_reconfigure.ConfigDescription,Ros.Net.DynamicReconfigure.IDynamicReconfigureInterface)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="RosNodeConfiguration.cs" Line="179">Modify 'RosNodeConfiguration.OnDynamicConfigurationUpdate(ConfigDescription, IDynamicReconfigureInterface)' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadXml(System.Xml.XmlReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="RosNodeConfiguration.cs" Line="223">In externally visible method 'RosNodeConfiguration.ReadXml(XmlReader)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteXml(System.Xml.XmlWriter)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="RosNodeConfiguration.cs" Line="264">In externally visible method 'RosNodeConfiguration.WriteXml(XmlWriter)', validate parameter 'writer' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ConfigParameterAdded" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'EventHandler&lt;ConfigParameterAddedEventArgs&gt;' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Rubedos.Viper.Net.DynamicReconfigure">
       <Types>
        <Type Name="ConfigParameterAddedEventArgs" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
           <Issue Name="TypeNoAlternate" Certainty="95" Level="CriticalError">Rename type name 'ConfigParameterAddedEventArgs' so that it does not end in 'EventArgs'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="RosDeviceConfiguration" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Ros" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ros' in type name 'RosDeviceConfiguration'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CheckIfCompatible(Rubedos.Viper.Net.DynamicReconfigure.RosDeviceConfiguration)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="RosDeviceConfiguration.cs" Line="110">Because the behavior of 'string.Format(string, object)' could vary based on the current user's locale settings, replace this call in 'RosDeviceConfiguration.CheckIfCompatible(RosDeviceConfiguration)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="RosDeviceConfiguration.cs" Line="116">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'RosDeviceConfiguration.CheckIfCompatible(RosDeviceConfiguration)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="RosDeviceConfiguration.cs" Line="120">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'RosDeviceConfiguration.CheckIfCompatible(RosDeviceConfiguration)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="RosDeviceConfiguration.cs" Line="106">In externally visible method 'RosDeviceConfiguration.CheckIfCompatible(RosDeviceConfiguration)', validate parameter 'otherConfig' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#log" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RosDeviceConfiguration.log' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RosDynamicConfigParameter`1" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Ros" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ros' in type name 'RosDynamicConfigParameter&lt;T&gt;'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CreateParameterObjectFromXml(System.Xml.XmlReader)" Kind="Method" Static="True" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="RosDynamicConfigParameter.cs" Line="217">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'RosDynamicConfigParameter&lt;T&gt;.CreateParameterObjectFromXml(XmlReader)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#log" Kind="Field" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'RosDynamicConfigParameter&lt;T&gt;.log' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadXml(System.Xml.XmlReader)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="RosDynamicConfigParameter.cs" Line="161">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'RosDynamicConfigParameter&lt;T&gt;.ReadXml(XmlReader)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="RosDynamicConfigParameter.cs" Line="141">In externally visible method 'RosDynamicConfigParameter&lt;T&gt;.ReadXml(XmlReader)', validate parameter 'reader' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#System.Xml.Serialization.IXmlSerializable.GetSchema()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="True">
           <Messages>
            <Message TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="RosDynamicConfigParameter.cs" Line="263">Make 'RosDynamicConfigParameter&lt;T&gt;' sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of 'IXmlSerializable.GetSchema()' and is visible to derived classes.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ValueFromString(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Int32.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="RosDynamicConfigParameter.cs" Line="359">Because the behavior of 'int.Parse(string)' could vary based on the current user's locale settings, replace this call in 'RosDynamicConfigParameter&lt;T&gt;.ValueFromString(string)' with a call to 'int.Parse(string, IFormatProvider)'. If the result of 'int.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteXml(System.Xml.XmlWriter)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.Xml.XmlWriter.WriteComment(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="RosDynamicConfigParameter.cs" Line="245">Method 'RosDynamicConfigParameter&lt;T&gt;.WriteXml(XmlWriter)' passes a literal string as parameter 'text' of a call to 'XmlWriter.WriteComment(string)'. Retrieve the following string(s) from a resource table instead: ". Default: \', \'. Min/Max: , /".</Issue>
            </Message>
            <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="RosDynamicConfigParameter.cs" Line="245">Because the behavior of 'string.Format(string, params object[])' could vary based on the current user's locale settings, replace this call in 'RosDynamicConfigParameter&lt;T&gt;.WriteXml(XmlWriter)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\DynamicReconfigure" File="RosDynamicConfigParameter.cs" Line="241">In externally visible method 'RosDynamicConfigParameter&lt;T&gt;.WriteXml(XmlWriter)', validate parameter 'writer' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Rubedos.Viper.Net.PerceptionApps">
       <Types>
        <Type Name="CoreApp" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Rubedos.Viper.Net.CvmDevice)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="device" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\PerceptionApps" File="CoreApp.cs" Line="19">Parameter 'device' of 'CoreApp.CoreApp(CvmDevice)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsActivated" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#get_IsActivated()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
             <Messages>
              <Message TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
               <Issue Name="PropertyGetter" Certainty="90" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\PerceptionApps" File="CoreApp.cs" Line="39">'CoreApp.IsActivated.get()' creates an exception of type 'NotImplementedException', an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="FollowMeApp" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Description" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_Description(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\PerceptionApps" File="FollowMeApp.cs" Line="79">'FollowMeApp.Description.set(string)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="Person" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Rectangle" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Accessors>
            <Accessor Name="#set_Rectangle(Rubedos.Viper.Net.Iface.RectangleOfInterest)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\PerceptionApps" File="Person.cs" Line="19">'Person.Rectangle.set(RectangleOfInterest)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Rubedos.Viper.Net.Tf">
       <Types>
        <Type Name="TfFrame" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Tf" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'Tf' in type name 'TfFrame' by changing it to 'TF'.</Issue>
          </Message>
          <Message Id="Tf" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tf' in type name 'TfFrame'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#FrameToString(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\Tf" File="TfManager.cs" Line="87">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'TfFrame.FrameToString(int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\Tf" File="TfManager.cs" Line="90">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'TfFrame.FrameToString(int)' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lastMessage" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="last" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\Tf" File="TfManager.cs" Line="36">Correct the casing of 'last' in member name 'TfFrame.lastMessage' by changing it to 'Last'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ToString()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\Tf" File="TfManager.cs" Line="73">Because the behavior of 'string.Format(string, object, object)' could vary based on the current user's locale settings, replace this call in 'TfFrame.ToString()' with a call to 'string.Format(IFormatProvider, string, params object[])'. If the result of 'string.Format(IFormatProvider, string, params object[])' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="TfManager" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Tf" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'Tf' in type name 'TfManager' by changing it to 'TF'.</Issue>
          </Message>
          <Message Id="Tf" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Tf' in type name 'TfManager'.</Issue>
          </Message>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'TfManager' because it creates members of the following IDisposable types: 'NodeHandle'. If 'TfManager' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CvmTransform" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Cvm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\Tf" File="TfManager.cs" Line="186">Correct the spelling of 'Cvm' in member name 'TfManager.CvmTransform' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Frames" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\Tf" File="TfManager.cs" Line="175">Change 'TfManager.Frames' to return a collection or make it a method.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TfTransformer" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Tf" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\Tf" File="TfManager.cs" Line="151">Correct the casing of 'Tf' in member name 'TfManager.TfTransformer' by changing it to 'TF'.</Issue>
            </Message>
            <Message Id="Tf" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\Tf" File="TfManager.cs" Line="151">Correct the spelling of 'Tf' in member name 'TfManager.TfTransformer' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
           <Accessors>
            <Accessor Name="#set_TfTransformer(Ros.Net.Tf.Transformer)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
               <Issue Certainty="75" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\Tf" File="TfManager.cs" Line="151">'TfManager.TfTransformer.set(Transformer)' appears to have no upstream public or protected callers.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#TopicsUpdated(System.Collections.Generic.IEnumerable`1&lt;Ros.Net.TopicInfo&gt;,System.Collections.Generic.IEnumerable`1&lt;Ros.Net.TopicInfo&gt;)" Kind="Method" Static="False" Accessibility="Assembly" ExternallyVisible="False">
           <Messages>
            <Message Id="removedTopics" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Status="Active" Created="2019-01-31 23:02:40Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\bamboo-home\xml-data\build-dir\131073\CVM-CNW-VIP\Viper.Net\Tf" File="TfManager.cs" Line="214">Parameter 'removedTopics' of 'TfManager.TopicsUpdated(IEnumerable&lt;TopicInfo&gt;, IEnumerable&lt;TopicInfo&gt;)' is never used. Remove the parameter or use it in the method body.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AvoidNamespacesWithFewTypes" Category="Microsoft.Design" CheckId="CA1020">
   <Name>Avoid namespaces with few types</Name>
   <Description>A namespace should generally have more than five types.</Description>
   <Resolution Name="Default">Consider merging the types defined in '{0}' with another namespace.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182130.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="CallGCSuppressFinalizeCorrectly" Category="Microsoft.Usage" CheckId="CA1816">
   <Name>Call GC.SuppressFinalize correctly</Name>
   <Description>Call GC.SuppressFinalize to suppress finalization of your instance once Dispose has been called. Objects that implement IDisposable should call SuppressFinalize from the IDisposable.Dispose method to prevent the garbage collector from calling Object.Finalize on an object that does not require it.</Description>
   <Resolution Name="NotCalled">Change {0} to call {1}. This will prevent derived types that introduce a finalizer from needing to re-implement 'IDisposable' to call it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182269.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Declare event handlers correctly</Name>
   <Description>By convention, .NET events have two parameters that specify the event sender and event data. Event handler signatures should follow this form: void MyEventHandler(object sender, EventArgs e). The 'sender' parameter is always of type System.Object, even if it is possible to employ a more specific type. The 'e' parameter is always of type System.EventArgs. Events that do not provide event data should use the System.EventHandler delegate type. Event handlers return void so that they can send each event to multiple target methods. Any value returned by a target would be lost after the first call.</Description>
   <Resolution Name="Second">Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182133.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026">
   <Name>Default parameters should not be used</Name>
   <Description>Some programming languages do not support default parameters. Replace default parameters with method overloads that supply the default argument.</Description>
   <Resolution Name="Default">Replace method {0} with an overload that supplies all default arguments.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182135.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213">
   <Name>Disposable fields should be disposed</Name>
   <Description>If a type that implements IDisposable owns fields that also implement IDisposable, the encapsulating type's Dispose() implementation should call Dispose() on each disposable field.</Description>
   <Resolution Name="Default">{0} contains field {1} that is of IDisposable type: {2}. Change the Dispose method on {0} to call Dispose or Close on this field.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182328.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Do not dispose objects multiple times</Name>
   <Description>A correctly implemented Dispose method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.</Description>
   <Resolution Name="Default">Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 439</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseExceptionsInUnexpectedLocations" Category="Microsoft.Design" CheckId="CA1065">
   <Name>Do not raise exceptions in unexpected locations</Name>
   <Description>Do not explicitly raise exceptions from unexpected locations. There are some methods, such as Equals and GetHashCode, which users do not expect to raise exceptions. Therefore calls to these methods are not commonly wrapped in try catch blocks.</Description>
   <Resolution Name="PropertyGetter">{0} creates an exception of type {1}, an exception type that should not be raised in a property. If this exception instance might be raised, use a different exception type, convert this property into a method, or change this property's logic so that it no longer raises an exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386039.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error, Warning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Assembly">Correct the spelling of '{0}' in assembly name {1}.</Resolution>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="Namespace">Correct the spelling of '{0}' in namespace name '{1}'.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotHaveIncorrectSuffix" Category="Microsoft.Naming" CheckId="CA1711">
   <Name>Identifiers should not have incorrect suffix</Name>
   <Description>Types that do not extend certain base types should not use reserved name suffixes. Types and members should not use 'Ex' or 'New' to distinguish them from an earlier version of the same API, instead, use a numeric suffix such as '2' or provide a more meaningful suffix. Concrete type implementations and members should not end 'Impl'. Members instead, should either consider using the suggested alternate 'Core' in replacement of 'Impl' or avoid any suffix at all.</Description>
   <Resolution Name="TypeNoAlternate">Rename type name {0} so that it does not end in '{1}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182247.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="namingrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="InterfaceMethodsShouldBeCallableByChildTypes" Category="Microsoft.Design" CheckId="CA1033">
   <Name>Interface methods should be callable by child types</Name>
   <Description>Explicit method implementations are defined with private accessibility. Classes that derive from classes with explicit method implementations and choose to re-declare them on the class will not be able to call into the base class implementation unless the base class has provided an alternate method with appropriate accessibility. When overriding a base class method that has been hidden by explicit interface implementation, in order to call into the base class implementation, a derived class must cast the base pointer to the relevant interface. When calling through this reference, however, the derived class implementation will actually be invoked, resulting in recursion and an eventual stack overflow.</Description>
   <Resolution Name="Default">Make {0} sealed (a breaking change if this class has previously shipped), implement the method non-explicitly, or implement a new method that exposes the functionality of {1} and is visible to derived classes.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182153.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Literals should be spelled correctly" Category="Microsoft.Naming" CheckId="CA2204">
   <Name>Literals should be spelled correctly</Name>
   <Description>This rule parses the literal string into words, tokenizing compound words, and checks the spelling of each word/token.</Description>
   <Resolution Name="Default">Correct the spelling of the unrecognized token '{0}' in the literal '{1}'.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/bb264488.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkISerializableTypesWithSerializable" Category="Microsoft.Usage" CheckId="CA2237">
   <Name>Mark ISerializable types with SerializableAttribute</Name>
   <Description>The System.Runtime.Serialization.ISerializable interface allows the type to customize its serialization, while the Serializable attribute enables the runtime to recognize the type as being serializable.</Description>
   <Resolution Name="Default">Add [Serializable] to {0} as this type implements ISerializable.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182350.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="PropertiesShouldNotReturnArrays" Category="Microsoft.Performance" CheckId="CA1819">
   <Name>Properties should not return arrays</Name>
   <Description>Properties that return arrays are prone to code inefficiencies. Consider using a collection or making this a method. See the design guidelines for more information.</Description>
   <Resolution Name="Default">Change {0} to return a collection or make it a method.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/0fss9skc.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="50">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Provide correct arguments to formatting methods" Category="Microsoft.Usage" CheckId="CA2241">
   <Name>Provide correct arguments to formatting methods</Name>
   <Description>Provide the correct number of arguments to String.Format calls.</Description>
   <Resolution Name="MissingFormatItem">Method {0} calls {1} and does not provide a format item for argument {2}. The provided format string is: '{3}'</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182361.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
   <Name>Review unused parameters</Name>
   <Description>Review parameters in non-virtual methods that are not used in the method body to ensure no correctness exists around failure to access them. Unused parameters incur maintenance and performance costs. Sometimes a violation of this rule can point to an implementation bug in the method (i.e. the parameter should actually have been used in the method body). Exclude warnings of this rule if the parameter has to exist because of backward compatibility.</Description>
   <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182268.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
   <Name>Specify StringComparison</Name>
   <Description>If an overload exists that takes a StringComparison argument, it should always be called in favor of an overload that does not.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb386080.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Types that own disposable fields should be disposable</Name>
   <Description>Types that declare disposable members should also implement IDisposable. If the type does not own any unmanaged resources, do not implement a finalizer on it.</Description>
   <Resolution Name="DependsOnFix">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UseLiteralsWhereAppropriate" Category="Microsoft.Performance" CheckId="CA1802">
   <Name>Use literals where appropriate</Name>
   <Description>Prefer literals over InitOnly fields if values do not have to be calculated at runtime.</Description>
   <Resolution Name="Default">Field {0} is declared as 'static readonly' but is initialized with a constant value '{1}'. Mark this field as 'const' instead.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182280.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="14.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="14.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
